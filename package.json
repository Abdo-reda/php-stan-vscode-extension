{
  "name": "php-stan",
  "displayName": "php-stan",
  "publisher": "nopoint",
  "description": "Analyse your php code instantly, and catch errors before they happen.",
  "version": "0.8.7",
  "repository": {
    "type": "git",
    "url": "https://github.com/Abdo-reda/php-stan-vscode-extension"
  },
  "engines": {
    "vscode": "^1.95.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onLanguage:php"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "php-stan.analyse",
        "title": "Run Analysis."
      }
    ],
    "configuration": {
      "title": "PHPStan",
      "properties": {
        "php-stan.binary": {
          "type": "string",
          "enum": [
            "phar"
          ],
          "default": "phar",
          "markdownDescription": "Approach used to download and execute php-stan. Currently only phar files are used. Later, support for composer will be added. [Reference](https://phpstan.org/user-guide/getting-started#installation)"
        },
        "php-stan.analysisOn": {
          "type": "string",
          "enum": [
            "manual",
            "onSave",
            "onChange"
          ],
          "default": "onSave",
          "markdownDescription": "When should php-stan analysis run. By default, analysis runs after saving any file. You can however choose to do it manually by running the php-stan analyse command, or after changing the contents of a file."
        },
        "php-stan.analysisScope": {
          "type": "string",
          "enum": [
            "file",
            "directory",
            "workspace"
          ],
          "default": "directory",
          "markdownDescription": "What will be included in the analysis. By default, analysis runs on the active directory. You can however choose to do it only on the active file or on the entire workspace."
        },
        "php-stan.level": {
          "type": "number",
          "default": 5,
          "minimum": 0,
          "maximum": 9,
          "markdownDescription": "Level used for analysis (-l). Only values between 0-9 inclusive are allowed. [Reference](https://phpstan.org/user-guide/rule-levels)"
        }
      }
    },
    "icons": {
      "php-stan-default": {
        "description": "PHPStan Default Icon",
        "default": {
          "fontPath": "./assets/phpStanIcons.woff",
          "fontCharacter": "\\E001"
        }
      },
      "php-stan-success": {
        "description": "PHPStan Success Icon",
        "default": {
          "fontPath": "./assets/phpStanIcons.woff",
          "fontCharacter": "\\E002"
        }
      },
      "php-stan-error": {
        "description": "PHPStan Error Icon",
        "default": {
          "fontPath": "./assets/phpStanIcons.woff",
          "fontCharacter": "\\E003"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src",
    "test": "vscode-test",
    "package": "mkdir -p build && vsce package --out build/",
    "publish": "vsce publish"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.9",
    "@types/node": "20.x",
    "@types/vscode": "^1.95.0",
    "@typescript-eslint/eslint-plugin": "^8.10.0",
    "@typescript-eslint/parser": "^8.7.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "eslint": "^9.13.0",
    "typescript": "^5.6.3",
    "@vscode/vsce": "^3.2.1"
  }
}
